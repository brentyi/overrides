from abc import ABCMeta
from typing import Any, Callable

def ensure_signature_is_compatible(super_callable: Callable, sub_callable: Callable) -> None: ...
def ensure_all_args_defined_in_sub(super_sig: Any, sub_sig: Any) -> None: ...
def is_param_defined_in_sub(name: Any, sub_has_var_args: Any, sub_has_var_kwargs: Any, sub_sig: Any, super_param: Any): ...
def ensure_no_extra_args_in_sub(super_sig: Any, sub_sig: Any) -> None: ...
def ensure_return_type_compatibility(super_sig: Any, sub_sig: Any) -> None: ...

class EnforceOverridesMeta(ABCMeta):
    def __new__(mcls: Any, name: Any, bases: Any, namespace: Any, **kwargs: Any): ...
    @staticmethod
    def handle_special_value(value: Any): ...

class EnforceOverrides(metaclass=EnforceOverridesMeta): ...
